@model PagedList.IPagedList<CIT275_Back_end_interface.Models.Client>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Clients";
}
@*Clients*@
<br />
 @using (Html.BeginForm("Index", "Clients", FormMethod.Get))
   {
            <p>
                Search: @Html.TextBox("searchString", ViewBag.CurrentFilter as string)

                <input type="submit" value="Search" />
            </p>
 }<!-- SEARCH FORM END -->
<h2>Index</h2>

<p>
    @Html.ActionLink("Add New Client", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Name", "Index", new { sortOrder = ViewBag.NameSortParm })
            
        </th>
        <th>
            Address1
        </th>

        <th>
            @Html.ActionLink("City", "Index", new { sortOrder = ViewBag.CitySortParm })
        </th>
        <th>
           State
        </th>
        <th>
            @Html.ActionLink("Zip", "Index", new { sortOrder = ViewBag.ZipSortParm })
        </th>
        <th>
           Country
        </th>
        <th>
            Phone
        </th>
        
       
        
        <th>
            Email
        </th>
        
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.CompanyName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Address1) <br />  @Html.DisplayFor(modelItem => item.Address2)
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.City)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.State)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ZipCode)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Country)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Phone1)<span style="font-size: .7em">&nbsp;@Html.DisplayFor(modelItem => item.Phone1Type)</span>
            <br />
            @Html.DisplayFor(modelItem => item.Phone2)<span style="font-size: .7em">&nbsp;@Html.DisplayFor(modelItem => item.Phone2Type)</span>
        </td>
       
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.ClientID }) |
            @Html.ActionLink("Details", "Details", new { id=item.ClientID }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.ClientID })
        </td>
    </tr>
}

</table>
<br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
