@model CIT275_Back_end_interface.Controllers.FileLogsController.ClientLogExRef

@{
    ViewBag.Title = "Logs";
    Layout = "_FileLogLayout.cshtml";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-sm-3 col-md-2 logSidebarLeft">
            <h2 class="sub-header">Clients</h2>

            <ul class="treeList">
                @foreach (var item in Model.Clients)
                {
                    <li id="@item.ClientID">
                        <span class="glyphicon glyphicon-menu-right" onclick="toggleTree(@item.ClientID)"></span> <a onclick="filterPerClient(@item.ClientID)">@Html.DisplayFor(modelItem => item.CompanyName)</a>
                        <ul class="treeListSub treeOff">
                            @foreach (var item2 in Model.ClientAssests)
                            {
                                @getAssets(item.ClientID, item2, Model.Assets)
                            }
                        </ul>
                    </li>
                }
            </ul>

        </div>

        <div class="col-sm-6 col-sm-offset-3 col-md-8 col-md-offset-2 logMain">
            <h1 class="page-header">Log Files</h1>

            <h2 class="sub-header" id="clientName">{ClientName}</h2>
            <h3 id="assetName">{AssetName}</h3>

            @using (Html.BeginForm("Index", "FileLog", FormMethod.Post))
            {
                @Html.AntiForgeryToken()


            }

            <p> @Html.ActionLink("Create New", "Create") </p>
            
            @* FILELOG TABLE *@
            @Ajax.ActionLink(
                 "Show",
                 "Show",
                 null,
                 new AjaxOptions
                 {
                     HttpMethod = "GET",
                     InsertionMode = InsertionMode.Replace,
                     UpdateTargetId = "dialog_window_id",
                     OnComplete = "your_js_function();"
                 })

            @*<div class="table-responsive">
                <table id="logTable" class="table table-striped table-hover tablesorter">
                    <thead>
                        <tr>
                            <th>FileName</th>
                            <th>FilePath</th>
                            <th>ClientID</th>
                            <th>AssetID</th>
                            <th>Status</th>
                            <th>DeleteInd</th>
                            <th>Archived</th>
                            <th>BaseDate</th>
                            <th>CreateDate</th>
                            <th></th>
                            <th></th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (var item in Model.Filelogs)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FileName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.FilePath)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ClientID)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.AssetID)
                                </td>
                                <td>
                                    @formatStatus(@Html.DisplayFor(modelItem => item.Status).ToString())
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DeleteInd)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Archived)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BaseDate)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.CreateDate)
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <a class="logOption dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="glyphicon glyphicon-option-vertical"></span>
                                        </a>
                                        <ul class="dropdown-menu dropdown-menu-right dropdownMenu">
                                            <li>@Html.ActionLink("Edit", "Edit", new { id = item.ID })</li>
                                            <li>@Html.ActionLink("Details", "Details", new { id = item.ID })</li>
                                            <li>@Html.ActionLink("Delete", "Delete", new { id = item.ID })</li>
                                        </ul>
                                    </div>
                                </td>
                                <td>
                                    <a class="logOption"><span class="glyphicon glyphicon-download-alt"></span></a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>*@
            <div class="col-sm-3 col-sm-offset-9 col-md-2 col-md-offset-10 logSidebarRight">
                <div>
                    <h2 class="sub-header">Log Details</h2>
                </div>
                <div class="table-responsive">
                    <table class="table table-striped">
                        <tbody>
                            <tr>
                                <th>LogFileId</th>
                                <td>1</td>

                            </tr>
                            <tr>
                                <th>LogFileName</th>
                                <td>log1</td>
                            </tr>
                            <tr>
                                <th>LogFileDate</th>
                                <td>1/1/2017</td>

                            </tr>
                            <tr>
                                <th>LogFileSize</th>
                                <td>1kb</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p><a class="btn btn-success" href="~/FileLogs/Index">Download Log <span class="glyphicon glyphicon-download-alt"></span></a></p>
                <p><a class="btn btn-warning" href="~/FileLogs/Index">Archive Log</a></p>
            </div>

            <hr />
            <footer>
                <p>&copy; @DateTime.Now.Year - Interactive Aerial</p>
            </footer>
        </div>
    </div>
</div>

<script type="text/javascript">
    /* SORTING */
    $(document).ready(function () {
        $("#logTable").tablesorter({
            headers: {
                5: {
                    sorter: false
                },
                6: {
                    sorter: false
                },
                9: {
                    sorter: false
                },
                10: {
                    sorter: false
                }
            }
        });
    });

    /* FILTER */
    function filterPerClient(clientid)
    {
        $.ajax({
            type: 'POST',
            contentType: "application/json; charset=utf-8",
            url: '@Url.Action("Index", "FileLogs")',
            data: JSON.stringify(clientid),
            async: false,
            success: function (response) {
                alert(response);
                //append the data in between table tbody like,
                //$('table tbody').html(response);
                //No window.location.reload(); It will cause page reload initial data will appear in grid.
            },
            error: function () { alert("error"); }
        });
    }

    function filterPerAssets(assetid, clientid)
    {

    }

    /* TREE MENU */
    function toggleTree(clientid)
    {
        $('li#' + clientid + ' > span.glyphicon').toggleClass('glyphicon-menu-right glyphicon-menu-down');
        $('li#' + clientid + ' > ul.treeListSub').toggleClass('treeOff treeOn');
    }
</script>


@helper getAssets(int clientId, CIT275_Back_end_interface.Models.ClientAsset clientasset, IEnumerable<CIT275_Back_end_interface.Models.Asset> assets)
{
    List<CIT275_Back_end_interface.Models.Asset> fa = new List<CIT275_Back_end_interface.Models.Asset>();

    if (clientId == clientasset.ClientID)
    {
        foreach (var item in assets)
        {
            if (item.AssetID == clientasset.AssetID)
            {
                fa.Add(item);
            }
        }
    }

    /* RETURN */
    foreach (var item in fa)
    {
        <li><a onclick="filterPerAssets(@item.AssetID, @clientId)"><span class="glyphicon glyphicon-minus"></span> @item.Name</a></li>
    }
}